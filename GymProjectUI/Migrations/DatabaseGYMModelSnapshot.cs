// <auto-generated />
using System;
using GYMDatabaseProject.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace GymProjectUI.Migrations
{
    [DbContext(typeof(DatabaseGYM))]
    partial class DatabaseGYMModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("GYMDatabaseProject.Models.Admins", b =>
                {
                    b.Property<int>("AdminDBID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("AdminDBID");

                    b.ToTable("Admins");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Messages", b =>
                {
                    b.Property<int>("Message_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AdminsAdminDBID")
                        .HasColumnType("int");

                    b.Property<string>("Body")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("_From_ID")
                        .HasColumnType("int");

                    b.Property<int>("_To_ID")
                        .HasColumnType("int");

                    b.HasKey("Message_ID");

                    b.HasIndex("AdminsAdminDBID");

                    b.ToTable("AdminMessages");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Plans", b =>
                {
                    b.Property<int>("Plan_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<string>("_Plan")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Plan_ID");

                    b.ToTable("Plans");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Users", b =>
                {
                    b.Property<int>("UserDBID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdminDBID")
                        .HasColumnType("int");

                    b.Property<int?>("AdminDBID1")
                        .HasColumnType("int");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DOB")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("JoinedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PhoneNumber")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanExpiration")
                        .HasColumnType("datetime2");

                    b.Property<int>("Plan_ID")
                        .HasColumnType("int");

                    b.Property<int?>("Plan_ID1")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<string>("_Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("_Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserDBID");

                    b.HasIndex("AdminDBID1");

                    b.HasIndex("Plan_ID1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.UsersCalendar", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Day")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDBID")
                        .HasColumnType("int");

                    b.Property<int?>("UserDBID1")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserDBID1");

                    b.ToTable("UsersCalendar");
                });

            modelBuilder.Entity("GymProjectUI.Database.Models.UserNotifications", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Body")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserDBID")
                        .HasColumnType("int");

                    b.Property<int?>("UserDBID1")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserDBID1");

                    b.ToTable("UserNotifications");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Messages", b =>
                {
                    b.HasOne("GYMDatabaseProject.Models.Admins", null)
                        .WithMany("AdminMessages")
                        .HasForeignKey("AdminsAdminDBID");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Users", b =>
                {
                    b.HasOne("GYMDatabaseProject.Models.Admins", "Admin")
                        .WithMany()
                        .HasForeignKey("AdminDBID1");

                    b.HasOne("GYMDatabaseProject.Models.Plans", "Plan")
                        .WithMany()
                        .HasForeignKey("Plan_ID1");

                    b.Navigation("Admin");

                    b.Navigation("Plan");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.UsersCalendar", b =>
                {
                    b.HasOne("GYMDatabaseProject.Models.Users", "User")
                        .WithMany("Schedules")
                        .HasForeignKey("UserDBID1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GymProjectUI.Database.Models.UserNotifications", b =>
                {
                    b.HasOne("GYMDatabaseProject.Models.Users", "User")
                        .WithMany("Notifications")
                        .HasForeignKey("UserDBID1");

                    b.Navigation("User");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Admins", b =>
                {
                    b.Navigation("AdminMessages");
                });

            modelBuilder.Entity("GYMDatabaseProject.Models.Users", b =>
                {
                    b.Navigation("Notifications");

                    b.Navigation("Schedules");
                });
#pragma warning restore 612, 618
        }
    }
}
